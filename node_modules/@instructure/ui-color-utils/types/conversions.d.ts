/**
 * ---
 * category: utilities
 * ---
 * Color conversion utilities to transform between `TinyColor` colors (https://github.com/bgrins/TinyColor)
 * @module conversions
 */
import Color from 'tinycolor2';
import type { ColorInputWithoutInstance } from 'tinycolor2';
/**
 * Converts any valid `TinyColor` colors to hex string
 * @param {ColorInputWithoutInstance} rgb a color string
 * @returns {String} a hex string like `#FF0000`
 * @module color2hex
 */
declare const colorToHex: (rgb: ColorInputWithoutInstance) => string;
/**
 * Transforms any `TinyColor` to 8 length HEX (alpha included)
 * @param {ColorInputWithoutInstance} color representation from `TinyColor`
 * @returns {String} An 8 length hex string like `#FF0000FF`
 * @module colorToHex8
 */
declare const colorToHex8: (color: ColorInputWithoutInstance) => string;
/**
 * Transforms any `TinyColor` to RGBA object ( {r:number, g:number, b:number, a:number} )
 * also exported as `hexToRgb` for backward compatiblity reasons
 * @param {ColorInputWithoutInstance} color representation from `TinyColor`
 * @returns {Color.ColorFormats.RGBA} A `TinyColor` RGBA type
 * @module colorToRGB
 */
declare const colorToRGB: (color: ColorInputWithoutInstance) => Color.ColorFormats.RGBA;
/**
 * Transforms any `TinyColor` to HSVA object ( {h:number, s:number, v:number, a:number} )
 * @param {ColorInputWithoutInstance} color representation from `TinyColor`
 * @returns {Color.ColorFormats.HSVA} A `TinyColor` HSVA type
 * @module colorToHsva
 */
declare const colorToHsva: (color: ColorInputWithoutInstance) => Color.ColorFormats.HSVA;
/**
 * Transforms any `TinyColor` to HSLA object ( {h:number, s:number, l:number, a:number} )
 * @param {ColorInputWithoutInstance} color representation from `TinyColor`
 * @returns {Color.ColorFormats.HSLA} A `TinyColor` HSLA type
 * @module colorToHsla
 */
declare const colorToHsla: (color: ColorInputWithoutInstance) => Color.ColorFormats.HSLA;
export { colorToHex, colorToHex8, colorToHsva, colorToHsla, colorToRGB, colorToHex as color2hex };
//# sourceMappingURL=conversions.d.ts.map