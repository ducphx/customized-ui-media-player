import { BreakpointQueries } from './QueryType';
/**
 * An object consisting of query names and boolean true false if it matches
 */
declare type MatchingQueries = Record<string, boolean>;
declare type Size = {
    width: number;
    height: number;
};
/**
 * ---
 * category: utilities/layout
 * ---
 *
 * Given a query and an element, return a function that takes
 * size as an argument and returns an object consisting of
 * query names and a boolean true false if it matches.
 * @module parseQuery
 * @param {Object} query - an object consisting of query names
 *  mapped to individual queries
 * @param {Document | Window | Node | null} el - component or DOM node
 * @returns {function} takes size {width, height} as an argument
 *  and returns an object consisting of query names and boolean
 *  true false if it matches
 */
declare function parseQuery(query: BreakpointQueries, el?: Document | Window | Node | null): ({ width, height }: Size) => MatchingQueries;
export default parseQuery;
export { parseQuery };
export type { Size };
//# sourceMappingURL=parseQuery.d.ts.map