import { QueryMatchListener } from './QueryType';
/**
 * ---
 * category: utilities/layout
 * ---
 * Given an object of named queries, listens for changes in the
 * window size and notifies which queries match via a function
 * callback. The callback method is only called when the query
 * matches change, not on all window resizes.
 *
 * This function shares an interface with
 * [addElementQueryMatchListener](#addElementQueryMatchListener)
 * so that they can be used interchangeably.
 *
 * The [Responsive](#Responsive) component with the `match` prop
 * set to `media` utilizes this function. This is a low level utility
 * method and, in most cases, [Responsive](#Responsive) should be
 * used instead.
 *
 * ```js
 * class MyComponent extends Component {
 *   state = {
 *     matches: []
 *   }
 *
 *   _listener = null
 *
 *   componentDidMount () {
 *     const query = {myFirstQuery: { minWidth: 100 }, mySecondQuery: { maxHeight: '30rem'}}
 *     const el = findDOMNode(this)
 *
 *     this._listener = addMediaQueryMatchListener(query, el, this.updateMatches)
 *   }
 *
 *   componentWillUnmount () {
 *     if (this._listener) {
 *       this._listener.remove()
 *     }
 *   }
 *
 *   updateMatches = (matches) => {
 *     this.setState({ matches })
 *   }
 *   ...
 * }
 * ```
 * @module addMediaQueryMatchListener
 * @param {Object} query - object consisting of names and query objects
 * @param {Node|Window|React.ReactElement|React.Component|function} el - a DOM node or a function returning a DOM node
 * @param {function} cb - called with an array of the names of the currently matching queries whenever a matching query changes
 * @param {object} matchMedia - called with an array of the names of the currently matching queries whenever a matching query changes
 * @returns {function} remove() function to call to remove the listener
 */
declare const addMediaQueryMatchListener: QueryMatchListener;
export default addMediaQueryMatchListener;
export { addMediaQueryMatchListener };
//# sourceMappingURL=addMediaQueryMatchListener.d.ts.map