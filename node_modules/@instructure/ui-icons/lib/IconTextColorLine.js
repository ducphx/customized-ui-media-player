"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.IconTextColorLine = void 0;

var _react = _interopRequireWildcard(require("react"));

var _SVGIcon = require("@instructure/ui-svg-images/lib/SVGIcon");

var _path;

class IconTextColorLine extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_SVGIcon.SVGIcon, Object.assign({}, this.props, {
      name: "IconTextColor",
      viewBox: "0 0 1920 1920",
      elementRef: this.handleRef
    }), _path || (_path = /*#__PURE__*/_react.default.createElement("path", {
      d: "M1846.308 1476.923V1920H74v-443.077h1772.308Zm-147.693 147.692H221.692v147.693h1476.923v-147.693ZM1109.751.06l509.391 1227.028-136.468 56.566-164.972-397.588H602.576l-164.972 397.588-136.468-56.566L810.526.059h299.225Zm-98.658 147.692h-101.76L663.868 738.373h592.542L1011.093 147.75Z",
      fillRule: "evenodd"
    })));
  }

}

exports.IconTextColorLine = IconTextColorLine;
IconTextColorLine.glyphName = 'text-color';
IconTextColorLine.variant = 'Line';
IconTextColorLine.displayName = 'IconTextColorLine';
IconTextColorLine.propTypes = { ..._SVGIcon.SVGIcon.propTypes
};
IconTextColorLine.allowedProps = [..._SVGIcon.SVGIcon.allowedProps];
var _default = IconTextColorLine;
exports.default = _default;