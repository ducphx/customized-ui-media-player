"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.IconCommentsOnLine = void 0;

var _react = _interopRequireWildcard(require("react"));

var _SVGIcon = require("@instructure/ui-svg-images/lib/SVGIcon");

var _path;

class IconCommentsOnLine extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_SVGIcon.SVGIcon, Object.assign({}, this.props, {
      name: "IconCommentsOn",
      viewBox: "0 0 1920 1920",
      elementRef: this.handleRef
    }), _path || (_path = /*#__PURE__*/_react.default.createElement("path", {
      d: "M853.333 309.653v106.774H106.667v1043.2l265.35-.098-.07 247.138 329.642-247.138 908.651.098V853.333h106.667l.075 712.862h-979.84L265.35 1920v-353.805H0V309.653h853.333ZM1840.151 0 1920 79.85l-475.482 475.482-282.014-281.901 79.849-79.85 202.165 202.052L1840.15 0Z"
    })));
  }

}

exports.IconCommentsOnLine = IconCommentsOnLine;
IconCommentsOnLine.glyphName = 'comments-on';
IconCommentsOnLine.variant = 'Line';
IconCommentsOnLine.displayName = 'IconCommentsOnLine';
IconCommentsOnLine.propTypes = { ..._SVGIcon.SVGIcon.propTypes
};
IconCommentsOnLine.allowedProps = [..._SVGIcon.SVGIcon.allowedProps];
var _default = IconCommentsOnLine;
exports.default = _default;