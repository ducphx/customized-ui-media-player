"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.IconMarkAsReadLine = void 0;

var _react = _interopRequireWildcard(require("react"));

var _SVGIcon = require("@instructure/ui-svg-images/lib/SVGIcon");

var _path;

class IconMarkAsReadLine extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_SVGIcon.SVGIcon, Object.assign({}, this.props, {
      name: "IconMarkAsRead",
      viewBox: "0 0 1920 1920",
      elementRef: this.handleRef
    }), _path || (_path = /*#__PURE__*/_react.default.createElement("path", {
      d: "M960 1807.059c-467.125 0-847.059-379.934-847.059-847.059 0-467.125 379.934-847.059 847.059-847.059 467.125 0 847.059 379.934 847.059 847.059 0 467.125-379.934 847.059-847.059 847.059M960 0C430.645 0 0 430.645 0 960s430.645 960 960 960 960-430.645 960-960S1489.355 0 960 0",
      fillRule: "evenodd"
    })));
  }

}

exports.IconMarkAsReadLine = IconMarkAsReadLine;
IconMarkAsReadLine.glyphName = 'mark-as-read';
IconMarkAsReadLine.variant = 'Line';
IconMarkAsReadLine.displayName = 'IconMarkAsReadLine';
IconMarkAsReadLine.propTypes = { ..._SVGIcon.SVGIcon.propTypes
};
IconMarkAsReadLine.allowedProps = [..._SVGIcon.SVGIcon.allowedProps];
var _default = IconMarkAsReadLine;
exports.default = _default;