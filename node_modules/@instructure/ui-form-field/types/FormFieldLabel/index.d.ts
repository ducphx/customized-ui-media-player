/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@instructure/emotion';
import type { FormFieldLabelProps } from './props';
/**
---
parent: FormField
---
@tsProps

This is a helper component that is used by most of the custom form
components. In most cases it shouldn't be used directly.

```js
---
example: true
---
<FormFieldLabel>Hello</FormFieldLabel>
```

**/
declare class FormFieldLabel extends Component<FormFieldLabelProps> {
    static readonly componentId = "FormFieldLabel";
    static propTypes: import("@instructure/shared-types/types/UtilityTypes").PropValidators<keyof {
        children: import("react").ReactNode;
        as?: import("@instructure/shared-types/types/CommonProps").AsElementType | undefined;
    }>;
    static allowedProps: readonly (keyof {
        children: import("react").ReactNode;
        as?: import("@instructure/shared-types/types/CommonProps").AsElementType | undefined;
    })[];
    static defaultProps: {
        readonly as: "span";
    };
    ref: Element | null;
    handleRef: (el: Element | null) => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): jsx.JSX.Element;
}
export default FormFieldLabel;
export { FormFieldLabel };
//# sourceMappingURL=index.d.ts.map