"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FormFieldMessages = void 0;

var _react = require("react");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _emotion = require("@instructure/emotion");

var _FormFieldMessage = require("../FormFieldMessage");

var _styles = _interopRequireDefault(require("./styles"));

var _theme = _interopRequireDefault(require("./theme"));

var _props = require("./props");

var _dec, _class, _class2;

/**
---
parent: FormField
---
@tsProps

A FormFieldMessages component

```js
---
example: true
---
<FormFieldMessages messages={[
  { text: 'Invalid name', type: 'error' },
  { text: 'Good job!', type: 'success' },
  { text: 'Full name, first and last', type: 'hint' },
]} />
```
**/
let FormFieldMessages = (_dec = (0, _emotion.withStyle)(_styles.default, _theme.default), _dec(_class = (_class2 = class FormFieldMessages extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      this.ref = el;
    };
  }

  componentDidMount() {
    var _this$props$makeStyle, _this$props;

    (_this$props$makeStyle = (_this$props = this.props).makeStyles) === null || _this$props$makeStyle === void 0 ? void 0 : _this$props$makeStyle.call(_this$props);
  }

  componentDidUpdate() {
    var _this$props$makeStyle2, _this$props2;

    (_this$props$makeStyle2 = (_this$props2 = this.props).makeStyles) === null || _this$props$makeStyle2 === void 0 ? void 0 : _this$props$makeStyle2.call(_this$props2);
  }

  render() {
    const _this$props3 = this.props,
          messages = _this$props3.messages,
          styles = _this$props3.styles;
    return messages && messages.length > 0 ? (0, _emotion.jsx)("span", Object.assign({
      css: styles === null || styles === void 0 ? void 0 : styles.formFieldMessages
    }, (0, _omitProps.omitProps)(this.props, FormFieldMessages.allowedProps), {
      ref: this.handleRef
    }), messages.map((msg, i) => {
      return (0, _emotion.jsx)("span", {
        key: `error${i}`,
        css: styles === null || styles === void 0 ? void 0 : styles.message
      }, (0, _emotion.jsx)(_FormFieldMessage.FormFieldMessage, {
        variant: msg.type
      }, msg.text));
    })) : null;
  }

}, _class2.displayName = "FormFieldMessages", _class2.componentId = 'FormFieldMessages', _class2.propTypes = _props.propTypes, _class2.allowedProps = _props.allowedProps, _class2.defaultProps = {}, _class2)) || _class);
exports.FormFieldMessages = FormFieldMessages;
var _default = FormFieldMessages;
exports.default = _default;