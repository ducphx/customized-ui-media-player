"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FormField = void 0;

var _react = _interopRequireWildcard(require("react"));

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _pickProps = require("@instructure/ui-react-utils/lib/pickProps.js");

var _FormFieldLayout = require("../FormFieldLayout");

var _props = require("./props");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
---
category: components
---
@tsProps
**/
class FormField extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_FormFieldLayout.FormFieldLayout, Object.assign({}, (0, _omitProps.omitProps)(this.props, FormField.allowedProps), (0, _pickProps.pickProps)(this.props, _FormFieldLayout.FormFieldLayout.allowedProps), {
      label: this.props.label,
      vAlign: this.props.vAlign,
      as: "label",
      htmlFor: this.props.id,
      elementRef: this.handleRef
    }));
  }

}

exports.FormField = FormField;
FormField.displayName = "FormField";
FormField.componentId = 'FormField';
FormField.propTypes = _props.propTypes;
FormField.allowedProps = _props.allowedProps;
FormField.defaultProps = {
  inline: false,
  layout: 'stacked',
  labelAlign: 'end',
  vAlign: 'middle'
};
var _default = FormField;
exports.default = _default;