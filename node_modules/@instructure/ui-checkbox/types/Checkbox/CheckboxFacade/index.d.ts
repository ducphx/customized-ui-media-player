/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@instructure/emotion';
import type { CheckboxFacadeProps } from './props';
/**
---
parent: Checkbox
---
@tsProps
**/
declare class CheckboxFacade extends Component<CheckboxFacadeProps> {
    static readonly componentId = "CheckboxFacade";
    static propTypes: import("@instructure/shared-types/types/UtilityTypes").PropValidators<keyof {
        children: import("react").ReactNode;
        checked?: boolean | undefined;
        focused?: boolean | undefined;
        hovered?: boolean | undefined;
        size?: "small" | "medium" | "large" | undefined;
        indeterminate?: boolean | undefined;
    }>;
    static allowedProps: readonly (keyof {
        children: import("react").ReactNode;
        checked?: boolean | undefined;
        focused?: boolean | undefined;
        hovered?: boolean | undefined;
        size?: "small" | "medium" | "large" | undefined;
        indeterminate?: boolean | undefined;
    })[];
    static defaultProps: {
        checked: boolean;
        focused: boolean;
        hovered: boolean;
        size: string;
        indeterminate: boolean;
    };
    ref: Element | null;
    handleRef: (el: Element | null) => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    renderIcon(): jsx.JSX.Element | null;
    render(): jsx.JSX.Element;
}
export default CheckboxFacade;
export { CheckboxFacade };
//# sourceMappingURL=index.d.ts.map