/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@instructure/emotion';
import type { ToggleFacadeProps } from './props';
/**
---
parent: Checkbox
---
@tsProps
**/
declare class ToggleFacade extends Component<ToggleFacadeProps> {
    static readonly componentId = "ToggleFacade";
    static propTypes: import("@instructure/shared-types/types/UtilityTypes").PropValidators<keyof {
        children: import("react").ReactNode;
        checked?: boolean | undefined;
        disabled?: boolean | undefined;
        readOnly?: boolean | undefined;
        focused?: boolean | undefined;
        size?: "small" | "medium" | "large" | undefined;
        labelPlacement?: "top" | "end" | "start" | undefined;
    }>;
    static allowedProps: readonly (keyof {
        children: import("react").ReactNode;
        checked?: boolean | undefined;
        disabled?: boolean | undefined;
        readOnly?: boolean | undefined;
        focused?: boolean | undefined;
        size?: "small" | "medium" | "large" | undefined;
        labelPlacement?: "top" | "end" | "start" | undefined;
    })[];
    static defaultProps: {
        checked: boolean;
        focused: boolean;
        size: string;
        disabled: boolean;
        readOnly: boolean;
        labelPlacement: string;
    };
    ref: Element | null;
    handleRef: (el: Element | null) => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    renderIcon(): jsx.JSX.Element;
    renderLabel(): jsx.JSX.Element;
    render(): jsx.JSX.Element;
}
export default ToggleFacade;
export { ToggleFacade };
//# sourceMappingURL=index.d.ts.map