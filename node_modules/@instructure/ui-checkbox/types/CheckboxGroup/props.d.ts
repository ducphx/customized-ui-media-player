import React from 'react';
import type { FormMessage } from '@instructure/ui-form-field';
import type { PropValidators } from '@instructure/shared-types';
import type { WithDeterministicIdProps } from '@instructure/ui-react-utils';
import { Checkbox } from '../Checkbox';
import type { CheckboxProps } from '../Checkbox/props';
declare type CheckboxChild = React.ComponentElement<CheckboxProps, Checkbox>;
declare type CheckboxGroupOwnProps = {
    children?: CheckboxChild[];
    name: string;
    description: React.ReactNode;
    defaultValue?: (string | number)[];
    value?: (string | number)[];
    onChange?: (value: (string | number)[]) => void;
    disabled?: boolean;
    readOnly?: boolean;
    messages?: FormMessage[];
    size?: 'small' | 'medium' | 'large';
    layout?: 'stacked' | 'columns' | 'inline';
};
declare type PropKeys = keyof CheckboxGroupOwnProps;
declare type AllowedPropKeys = Readonly<Array<PropKeys>>;
declare type CheckboxGroupProps = CheckboxGroupOwnProps & WithDeterministicIdProps;
declare const propTypes: PropValidators<PropKeys>;
declare const allowedProps: AllowedPropKeys;
declare type CheckboxGroupState = {
    value: (string | number)[];
};
export type { CheckboxGroupProps, CheckboxGroupState, CheckboxChild };
export { propTypes, allowedProps };
//# sourceMappingURL=props.d.ts.map