"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propTypes = exports.allowedProps = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _FormPropTypes = require("@instructure/ui-form-field/lib/FormPropTypes.js");

var _controllable = require("@instructure/ui-prop-types/lib/controllable.js");

var _Children = require("@instructure/ui-prop-types/lib/Children.js");

var _Checkbox = require("../Checkbox");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
const propTypes = {
  name: _propTypes.default.string.isRequired,
  description: _propTypes.default.node.isRequired,

  /**
   * value to set on initial render
   */
  defaultValue: _propTypes.default.array,

  /**
   * the selected values (must be accompanied by an `onChange` prop)
   */
  value: (0, _controllable.controllable)(_propTypes.default.array),

  /**
   * when used with the `value` prop, the component will not control its own state
   */
  onChange: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  readOnly: _propTypes.default.bool,

  /**
   * object with shape: `{
    text: PropTypes.node,
    type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])
      }`
   */
  messages: _propTypes.default.arrayOf(_FormPropTypes.FormPropTypes.message),

  /**
   * children of type `Checkbox`
   */
  children: _Children.Children.oneOf([_Checkbox.Checkbox]),
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  layout: _propTypes.default.oneOf(['stacked', 'columns', 'inline'])
};
exports.propTypes = propTypes;
const allowedProps = ['name', 'description', 'defaultValue', 'value', 'onChange', 'disabled', 'readOnly', 'messages', 'children', 'size', 'layout'];
exports.allowedProps = allowedProps;