"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propTypes = exports.allowedProps = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _element = require("@instructure/ui-prop-types/lib/element.js");

var _emotion = require("@instructure/emotion");

var _PositionPropTypes = require("@instructure/ui-position/lib/PositionPropTypes.js");

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
const propTypes = {
  isShowingContent: _propTypes.default.bool,
  defaultIsShowingContent: _propTypes.default.bool,
  on: _propTypes.default.oneOfType([_propTypes.default.oneOf(['click', 'hover', 'focus']), _propTypes.default.arrayOf(_propTypes.default.oneOf(['click', 'hover', 'focus']))]),
  withArrow: _propTypes.default.bool,
  color: _propTypes.default.oneOf(['primary', 'primary-inverse']),
  placement: _PositionPropTypes.PositionPropTypes.placement,
  shadow: _emotion.ThemeablePropTypes.shadow,
  stacking: _emotion.ThemeablePropTypes.stacking,
  contentRef: _propTypes.default.func,
  defaultFocusElement: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func]),
  screenReaderLabel: _propTypes.default.string,
  offsetX: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  offsetY: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  constrain: _PositionPropTypes.PositionPropTypes.constrain,
  positionTarget: _propTypes.default.oneOfType([_element.element, _propTypes.default.func]),
  mountNode: _PositionPropTypes.PositionPropTypes.mountNode,
  insertAt: _propTypes.default.oneOf(['bottom', 'top']),
  liveRegion: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.element), _propTypes.default.element, _propTypes.default.func]),
  id: _propTypes.default.string,
  shouldAlignArrow: _propTypes.default.bool,
  shouldTrackPosition: _propTypes.default.bool,
  shouldRenderOffscreen: _propTypes.default.bool,
  shouldContainFocus: _propTypes.default.bool,
  shouldReturnFocus: _propTypes.default.bool,
  shouldCloseOnDocumentClick: _propTypes.default.bool,
  shouldCloseOnEscape: _propTypes.default.bool,
  shouldFocusContentOnTriggerBlur: _propTypes.default.bool,
  onShowContent: _propTypes.default.func,
  onHideContent: _propTypes.default.func,
  onPositioned: _propTypes.default.func,
  onPositionChanged: _propTypes.default.func,
  onClick: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  onKeyUp: _propTypes.default.func,
  onMouseOver: _propTypes.default.func,
  onMouseOut: _propTypes.default.func,
  renderTrigger: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  elementRef: _propTypes.default.func
};
exports.propTypes = propTypes;
const allowedProps = ['isShowingContent', 'defaultIsShowingContent', 'on', 'withArrow', 'color', 'placement', 'shadow', 'stacking', 'contentRef', 'defaultFocusElement', 'screenReaderLabel', 'offsetX', 'offsetY', 'constrain', 'positionTarget', 'mountNode', 'insertAt', 'liveRegion', 'id', 'shouldAlignArrow', 'shouldTrackPosition', 'shouldRenderOffscreen', 'shouldContainFocus', 'shouldReturnFocus', 'shouldCloseOnDocumentClick', 'shouldCloseOnEscape', 'shouldFocusContentOnTriggerBlur', 'onShowContent', 'onHideContent', 'onPositioned', 'onPositionChanged', 'onClick', 'onFocus', 'onBlur', 'onKeyDown', 'onKeyUp', 'onMouseOver', 'onMouseOut', 'renderTrigger', 'children', 'elementRef'];
exports.allowedProps = allowedProps;