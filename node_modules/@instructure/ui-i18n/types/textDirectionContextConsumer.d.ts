/**
 * ---
 * category: utilities/i18n
 * ---
 *
 * A decorator or higher order component that supplies the text direction to
 * components.
 *
 * As a HOC:
 *
 * ```js
 * import { textDirectionContextConsumer } from '@instructure/ui-i18n'
 *
 * class Example extends React.Component {
 *   render () {
 *     return this.props.dir === textDirectionContextConsumer.DIRECTION.rtl ? <div>rtl</div> : <div>ltr</div>
 *   }
 * }
 *
 * export default textDirectionContextConsumer()(Example)
 * ```
 *
 * When used as a child of [InstUISettingsProvider](#InstUISettingsProvider), bidirectional components use
 * the direction provided in `TextDirectionContext`. When used without [InstUISettingsProvider](#InstUISettingsProvider),
 * the direction can be supplied explicitly via the `dir` prop. If no `dir` prop is provided,
 * bidirectional components query the documentElement for the `dir` attribute, defaulting to `ltr`
 * if it is not present.
 *
 * @module textDirectionContextConsumer
 * @return The decorator that composes the bidirectional component.
 */
declare const textDirectionContextConsumer: {
    (): (ComposedComponent: any) => any;
    DIRECTION: {
        ltr: string;
        rtl: string;
    };
};
export default textDirectionContextConsumer;
export { textDirectionContextConsumer };
//# sourceMappingURL=textDirectionContextConsumer.d.ts.map