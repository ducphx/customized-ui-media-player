/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import PropTypes from 'prop-types';
import { deprecated } from '@instructure/ui-react-utils';
const propTypes = {
  as: PropTypes.elementType,
  children: PropTypes.node,
  color: deprecated.deprecatePropValues(PropTypes.oneOf(['primary', 'secondary', 'brand', 'success', 'warning', 'danger', 'alert', 'primary-inverse', 'secondary-inverse']), ['warning'], "The `warning` color variant will be removed in version 9.0.0, because it doesn't have sufficient color contrast with the background (4.5:1) required for text."),
  elementRef: PropTypes.func,
  fontStyle: PropTypes.oneOf(['italic', 'normal']),
  letterSpacing: PropTypes.oneOf(['normal', 'condensed', 'expanded']),
  lineHeight: PropTypes.oneOf(['default', 'fit', 'condensed', 'double']),
  size: PropTypes.oneOf(['x-small', 'small', 'medium', 'large', 'x-large', 'xx-large']),
  transform: PropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
  weight: PropTypes.oneOf(['normal', 'light', 'bold']),
  wrap: PropTypes.oneOf(['normal', 'break-word'])
};
const allowedProps = ['as', 'children', 'color', 'elementRef', 'fontStyle', 'letterSpacing', 'lineHeight', 'size', 'transform', 'weight', 'wrap'];
export { propTypes, allowedProps };