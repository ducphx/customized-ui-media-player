"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Grid = void 0;
Object.defineProperty(exports, "GridCol", {
  enumerable: true,
  get: function () {
    return _GridCol.GridCol;
  }
});
Object.defineProperty(exports, "GridRow", {
  enumerable: true,
  get: function () {
    return _GridRow.GridRow;
  }
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _safeCloneElement = require("@instructure/ui-react-utils/lib/safeCloneElement.js");

var _matchComponentTypes = require("@instructure/ui-react-utils/lib/matchComponentTypes.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _pickProps = require("@instructure/ui-react-utils/lib/pickProps.js");

var _GridRow = require("../GridRow");

var _GridCol = require("../GridCol");

var _emotion = require("@instructure/emotion");

var _styles = _interopRequireDefault(require("./styles"));

var _theme = _interopRequireDefault(require("./theme"));

var _props = require("./props");

const _excluded = ["styles", "makeStyles"],
      _excluded2 = ["styles"];

var _dec, _class, _class2;

/**
---
category: components
---
@tsProps
**/
let Grid = (_dec = (0, _emotion.withStyle)(_styles.default, _theme.default), _dec(_class = (_class2 = class Grid extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      this.ref = el;
    };
  }

  componentDidMount() {
    var _this$props$makeStyle, _this$props;

    (_this$props$makeStyle = (_this$props = this.props).makeStyles) === null || _this$props$makeStyle === void 0 ? void 0 : _this$props$makeStyle.call(_this$props);
  }

  componentDidUpdate() {
    var _this$props$makeStyle2, _this$props2;

    (_this$props$makeStyle2 = (_this$props2 = this.props).makeStyles) === null || _this$props$makeStyle2 === void 0 ? void 0 : _this$props$makeStyle2.call(_this$props2);
  }

  renderChildren() {
    const _this$props3 = this.props,
          styles = _this$props3.styles,
          makeStyles = _this$props3.makeStyles,
          props = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);

    const children = _react.Children.toArray(this.props.children);

    return children.map((child, index) => {
      if ((0, _matchComponentTypes.matchComponentTypes)(child, [_GridRow.GridRow])) {
        return (0, _safeCloneElement.safeCloneElement)(child, { ...(0, _pickProps.pickProps)(props, Grid.allowedProps),
          ...child.props
          /* child props should override parent */
          ,
          isLastRow: index + 1 === children.length
        });
      } else {
        return child; // PropType validation should handle errors
      }
    });
  }

  render() {
    const _this$props4 = this.props,
          styles = _this$props4.styles,
          restProps = (0, _objectWithoutProperties2.default)(_this$props4, _excluded2);
    const props = (0, _omitProps.omitProps)(restProps, Grid.allowedProps);
    return (0, _emotion.jsx)("span", Object.assign({}, props, {
      css: styles === null || styles === void 0 ? void 0 : styles.grid,
      ref: this.handleRef
    }), this.renderChildren());
  }

}, _class2.displayName = "Grid", _class2.componentId = 'Grid', _class2.propTypes = _props.propTypes, _class2.allowedProps = _props.allowedProps, _class2.defaultProps = {
  colSpacing: 'medium',
  rowSpacing: 'medium',
  hAlign: 'start',
  startAt: 'small',
  vAlign: 'top',
  visualDebug: false,
  children: null
}, _class2.Row = _GridRow.GridRow, _class2.Col = _GridCol.GridCol, _class2)) || _class);
exports.Grid = Grid;
var _default = Grid;
exports.default = _default;