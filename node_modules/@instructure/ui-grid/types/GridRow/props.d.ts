import React from 'react';
import type { PropValidators, GridTheme, OtherHTMLAttributes } from '@instructure/shared-types';
import type { WithStyleProps, ComponentStyle } from '@instructure/emotion';
import type { GridBreakpoints } from '../GridTypes';
declare type GridRowOwnProps = {
    /**
     * One of: `Grid.Col`, `ScreenReaderContent`
     */
    children?: React.ReactNode;
    rowSpacing?: 'none' | 'small' | 'medium' | 'large';
    colSpacing?: 'none' | 'small' | 'medium' | 'large';
    hAlign?: 'start' | 'center' | 'end' | 'space-around' | 'space-between';
    vAlign?: 'top' | 'middle' | 'bottom';
    startAt?: GridBreakpoints;
    visualDebug?: boolean;
    isLastRow?: boolean;
};
declare type PropKeys = keyof GridRowOwnProps;
declare type AllowedPropKeys = Readonly<Array<PropKeys>>;
declare type GridRowProps = GridRowOwnProps & WithStyleProps<GridTheme, GridRowStyle> & OtherHTMLAttributes<GridRowOwnProps>;
declare type GridRowStyle = ComponentStyle<'gridRow'>;
declare const propTypes: PropValidators<PropKeys>;
declare const allowedProps: AllowedPropKeys;
export type { GridRowProps, GridRowStyle };
export { propTypes, allowedProps };
//# sourceMappingURL=props.d.ts.map