import { UIElement } from '@instructure/shared-types';
declare type PositionChangeListenerType = {
    remove: () => void;
};
/**
 * ---
 * category: utilities/DOM
 * ---
 * Adds a listener to an element and calls a specified handler
 * function whenever the position changes
 * @module
 * @param { Node | Window | React.ReactElement | React.Component | function } el - component or DOM node
 * @param {function} handler - function to run if the position has changed
 * @returns {function} remove - cancel the listener and no longer execute the handler function
 */
declare function addPositionChangeListener(el?: UIElement, handler?: (...args: any[]) => any): PositionChangeListenerType;
export default addPositionChangeListener;
export { addPositionChangeListener };
export type { PositionChangeListenerType };
//# sourceMappingURL=addPositionChangeListener.d.ts.map