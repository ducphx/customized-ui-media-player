"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SVGIcon = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = require("react");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _emotion = require("@instructure/emotion");

var _InlineSVG = require("../InlineSVG");

var _styles = _interopRequireDefault(require("./styles"));

var _theme = _interopRequireDefault(require("./theme"));

var _props = require("./props");

const _excluded = ["rotate", "className", "themeOverride", "size", "bidirectional", "makeStyles", "styles"],
      _excluded2 = ["sizeXSmall", "sizeSmall", "sizeMedium", "sizeLarge", "sizeXLarge"];

var _dec, _dec2, _class, _class2;

/**
---
category: components/utilities
---
@tsProps
**/
let SVGIcon = (_dec = (0, _emotion.withStyle)(_styles.default, _theme.default), _dec2 = (0, _testable.testable)(), _dec(_class = _dec2(_class = (_class2 = class SVGIcon extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  componentDidMount() {
    var _this$props$makeStyle, _this$props;

    (_this$props$makeStyle = (_this$props = this.props).makeStyles) === null || _this$props$makeStyle === void 0 ? void 0 : _this$props$makeStyle.call(_this$props);
  }

  componentDidUpdate() {
    var _this$props$makeStyle2, _this$props2;

    (_this$props$makeStyle2 = (_this$props2 = this.props).makeStyles) === null || _this$props$makeStyle2 === void 0 ? void 0 : _this$props$makeStyle2.call(_this$props2);
  }

  render() {
    const _this$props3 = this.props,
          rotate = _this$props3.rotate,
          className = _this$props3.className,
          themeOverride = _this$props3.themeOverride,
          size = _this$props3.size,
          bidirectional = _this$props3.bidirectional,
          makeStyles = _this$props3.makeStyles,
          styles = _this$props3.styles,
          props = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);
    const _ref = themeOverride,
          sizeXSmall = _ref.sizeXSmall,
          sizeSmall = _ref.sizeSmall,
          sizeMedium = _ref.sizeMedium,
          sizeLarge = _ref.sizeLarge,
          sizeXLarge = _ref.sizeXLarge,
          inlineSVGThemeOverrides = (0, _objectWithoutProperties2.default)(_ref, _excluded2);
    return (0, _emotion.jsx)(_InlineSVG.InlineSVG, Object.assign({}, props, {
      themeOverride: inlineSVGThemeOverrides,
      rotate: rotate,
      css: styles === null || styles === void 0 ? void 0 : styles.svgIcon,
      className: className,
      elementRef: this.handleRef
    }));
  }

}, _class2.displayName = "SVGIcon", _class2.componentId = 'SVGIcon', _class2.allowedProps = _props.allowedProps, _class2.propTypes = _props.propTypes, _class2.defaultProps = {
  rotate: '0',
  bidirectional: false
}, _class2)) || _class) || _class);
exports.SVGIcon = SVGIcon;
var _default = SVGIcon;
exports.default = _default;