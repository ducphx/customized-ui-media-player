/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@instructure/emotion';
import type { InlineSVGProps } from './props';
/**
---
category: components/utilities
---
@tsProps
**/
declare class InlineSVG extends Component<InlineSVGProps> {
    static readonly componentId = "InlineSVG";
    static allowedProps: readonly (keyof import("./props").InlineSVGOwnProps)[];
    static propTypes: import("@instructure/shared-types/types/UtilityTypes").PropValidators<keyof import("./props").InlineSVGOwnProps>;
    static defaultProps: {
        focusable: boolean;
        src: string;
        title: string;
        description: string;
        inline: boolean;
        width: string;
        height: string;
        color: string;
    };
    titleId?: string;
    descId?: string;
    ref: Element | null;
    handleRef: (el: Element | null) => void;
    constructor(props: InlineSVGProps);
    componentDidMount(): void;
    componentDidUpdate(): void;
    static prepareSrc: (src: string) => string;
    get role(): "img" | "presentation";
    renderTitle(): jsx.JSX.Element | null;
    renderDesc(desc: InlineSVGProps['description']): jsx.JSX.Element | null;
    get labelledBy(): string | undefined;
    renderContent(): jsx.JSX.Element;
    render(): jsx.JSX.Element;
}
export default InlineSVG;
export { InlineSVG };
//# sourceMappingURL=index.d.ts.map