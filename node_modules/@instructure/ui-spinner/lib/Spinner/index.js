"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Spinner = void 0;

var _react = require("react");

var _View = require("@instructure/ui-view/lib/View");

var _callRenderProp = require("@instructure/ui-react-utils/lib/callRenderProp.js");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _withDeterministicId = require("@instructure/ui-react-utils/lib/DeterministicIdContext/withDeterministicId.js");

var _testable = require("@instructure/ui-testable/lib/testable.js");

var _console = require("@instructure/console");

var _emotion = require("@instructure/emotion");

var _styles = _interopRequireDefault(require("./styles"));

var _theme = _interopRequireDefault(require("./theme"));

var _props = require("./props");

var _dec, _dec2, _dec3, _class, _class2;

/**
---
category: components
---
@tsProps
**/
let Spinner = (_dec = (0, _withDeterministicId.withDeterministicId)(), _dec2 = (0, _emotion.withStyle)(_styles.default, _theme.default), _dec3 = (0, _testable.testable)(), _dec(_class = _dec2(_class = _dec3(_class = (_class2 = class Spinner extends _react.Component {
  constructor(props) {
    super(props);
    this.ref = null;
    this.titleId = void 0;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };

    this.titleId = props.deterministicId();
  }

  componentDidMount() {
    var _this$props$makeStyle, _this$props;

    (_this$props$makeStyle = (_this$props = this.props).makeStyles) === null || _this$props$makeStyle === void 0 ? void 0 : _this$props$makeStyle.call(_this$props);
  }

  componentDidUpdate() {
    var _this$props$makeStyle2, _this$props2;

    (_this$props$makeStyle2 = (_this$props2 = this.props).makeStyles) === null || _this$props$makeStyle2 === void 0 ? void 0 : _this$props$makeStyle2.call(_this$props2);
  }

  radius() {
    switch (this.props.size) {
      case 'x-small':
        return '0.5em';

      case 'small':
        return '1em';

      case 'large':
        return '2.25em';

      default:
        return '1.75em';
    }
  }

  render() {
    var _this$props$styles, _this$props$styles2, _this$props$styles3, _this$props$styles4;

    const passthroughProps = _View.View.omitViewProps((0, _omitProps.omitProps)(this.props, Spinner.allowedProps), Spinner);

    const hasTitle = this.props.renderTitle;
    (0, _console.logError)(!!hasTitle, '[Spinner] The renderTitle prop is necessary for screen reader support.');
    return (0, _emotion.jsx)(_View.View, Object.assign({}, passthroughProps, {
      as: this.props.as,
      elementRef: this.handleRef,
      css: (_this$props$styles = this.props.styles) === null || _this$props$styles === void 0 ? void 0 : _this$props$styles.spinner,
      margin: this.props.margin
    }), (0, _emotion.jsx)("svg", {
      css: (_this$props$styles2 = this.props.styles) === null || _this$props$styles2 === void 0 ? void 0 : _this$props$styles2.circle,
      role: "img",
      "aria-labelledby": this.titleId,
      focusable: "false"
    }, (0, _emotion.jsx)("title", {
      id: this.titleId
    }, (0, _callRenderProp.callRenderProp)(this.props.renderTitle)), (0, _emotion.jsx)("g", {
      role: "presentation"
    }, this.props.variant !== 'inverse' && (0, _emotion.jsx)("circle", {
      css: (_this$props$styles3 = this.props.styles) === null || _this$props$styles3 === void 0 ? void 0 : _this$props$styles3.circleTrack,
      cx: "50%",
      cy: "50%",
      r: this.radius()
    }), (0, _emotion.jsx)("circle", {
      css: (_this$props$styles4 = this.props.styles) === null || _this$props$styles4 === void 0 ? void 0 : _this$props$styles4.circleSpin,
      cx: "50%",
      cy: "50%",
      r: this.radius()
    }))));
  }

}, _class2.displayName = "Spinner", _class2.componentId = 'Spinner', _class2.allowedProps = _props.allowedProps, _class2.propTypes = _props.propTypes, _class2.defaultProps = {
  as: 'div',
  size: 'medium',
  variant: 'default'
}, _class2)) || _class) || _class) || _class);
exports.Spinner = Spinner;
var _default = Spinner;
exports.default = _default;