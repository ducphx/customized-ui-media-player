import React from 'react';
import type { AsElementType, OtherHTMLAttributes, PropValidators, UIElement } from '@instructure/shared-types';
import type { FocusRegionOptions } from '@instructure/ui-a11y-utils';
declare type DialogOwnProps = {
    /**
     * The children to be rendered within the `<Dialog />`
     */
    children?: React.ReactNode;
    /**
     * The element to render as the component root, `span` by default
     */
    as?: AsElementType;
    display?: 'auto' | 'block' | 'inline-block';
    /**
     * The aria-label to read for screen reader.
     */
    label?: string;
    /**
     * Whether or not the `<Dialog />` is open
     */
    open?: boolean;
    /**
     * An element or a function returning an element that wraps the content of the `<Dialog />`
     */
    contentElement?: UIElement;
} & FocusRegionOptions;
declare type PropKeys = keyof DialogOwnProps;
declare type AllowedPropKeys = Readonly<Array<PropKeys>>;
declare type DialogProps = DialogOwnProps & OtherHTMLAttributes<DialogOwnProps>;
declare const propTypes: PropValidators<PropKeys>;
declare const allowedProps: AllowedPropKeys;
export type { DialogProps };
export { propTypes, allowedProps };
//# sourceMappingURL=props.d.ts.map