import React from 'react';
import MenuItem from '../MenuItem';
import type { AsElementType, PropValidators, MenuItemTheme, OtherHTMLAttributes } from '@instructure/shared-types';
import type { WithStyleProps, ComponentStyle } from '@instructure/emotion';
import type { WithDeterministicIdProps } from '@instructure/ui-react-utils';
declare type OnMenuItemSelect = (e: React.MouseEvent, value: MenuItemOwnProps['value'], selected: MenuItemOwnProps['selected'], args: MenuItem) => void;
declare type MenuItemOwnProps = {
    /**
     * the menu item label
     */
    children: React.ReactNode;
    /**
     * whether to set the menu item state to selected or not on initial render
     */
    defaultSelected?: boolean;
    /**
     * whether the menu item is selected or not (must be accompanied by an `onSelect` prop)
     */
    selected?: boolean;
    /**
     * when used with the `selected` prop, the component will not control its own state
     */
    onSelect?: OnMenuItemSelect;
    onClick?: (e: React.MouseEvent) => void;
    onKeyDown?: (e: React.KeyboardEvent) => void;
    onKeyUp?: (e: React.KeyboardEvent) => void;
    onMouseOver?: (e: React.MouseEvent, args: MenuItem) => void;
    /**
     * the id of the element that the menu item will act upon
     */
    controls?: string;
    disabled?: boolean;
    /**
     * the element type to render as (will default to `<a>` if href is provided)
     */
    as?: AsElementType;
    type?: 'button' | 'checkbox' | 'radio' | 'flyout';
    value?: string | number;
    href?: string;
};
declare type PropKeys = keyof MenuItemOwnProps;
declare type AllowedPropKeys = Readonly<Array<PropKeys>>;
declare type MenuItemProps = MenuItemOwnProps & WithStyleProps<MenuItemTheme, MenuItemStyle> & OtherHTMLAttributes<MenuItemOwnProps> & WithDeterministicIdProps;
declare type MenuItemStyle = ComponentStyle<'menuItem' | 'icon' | 'label'>;
declare const propTypes: PropValidators<PropKeys>;
declare const allowedProps: AllowedPropKeys;
declare type MenuItemState = {
    selected: boolean;
};
export type { MenuItemProps, MenuItemStyle, MenuItemState, OnMenuItemSelect };
export { propTypes, allowedProps };
//# sourceMappingURL=props.d.ts.map