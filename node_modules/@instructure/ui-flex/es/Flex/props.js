/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 - present Instructure, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import PropTypes from 'prop-types';
import { ThemeablePropTypes } from '@instructure/emotion';
const propTypes = {
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
  as: PropTypes.elementType,
  elementRef: PropTypes.func,
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  margin: ThemeablePropTypes.spacing,
  padding: ThemeablePropTypes.spacing,
  display: PropTypes.oneOf(['flex', 'inline-flex']),
  textAlign: PropTypes.oneOf(['start', 'center', 'end']),
  direction: PropTypes.oneOf(['row', 'column', 'row-reverse', 'column-reverse']),
  alignItems: PropTypes.oneOf(['center', 'start', 'end', 'stretch']),
  justifyItems: PropTypes.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),
  wrap: PropTypes.oneOf(['wrap', 'no-wrap', 'wrap-reverse']),
  withVisualDebug: PropTypes.bool
};
const allowedProps = ['children', 'as', 'elementRef', 'height', 'width', 'margin', 'padding', 'display', 'textAlign', 'direction', 'alignItems', 'justifyItems', 'wrap', 'withVisualDebug'];
export { propTypes, allowedProps };