"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Item = void 0;

var _react = require("react");

var _omitProps = require("@instructure/ui-react-utils/lib/omitProps.js");

var _View = require("@instructure/ui-view/lib/View");

var _emotion = require("@instructure/emotion");

var _styles = _interopRequireDefault(require("./styles"));

var _props = require("./props");

var _dec, _class, _class2;

/**
---
parent: Flex
id: Flex.Item
---
@tsProps
**/
let Item = (_dec = (0, _emotion.withStyle)(_styles.default, null), _dec(_class = (_class2 = class Item extends _react.Component {
  constructor() {
    super(...arguments);
    this.ref = null;

    this.handleRef = el => {
      const elementRef = this.props.elementRef;
      this.ref = el;

      if (typeof elementRef === 'function') {
        elementRef(el);
      }
    };
  }

  componentDidMount() {
    var _this$props$makeStyle, _this$props;

    (_this$props$makeStyle = (_this$props = this.props).makeStyles) === null || _this$props$makeStyle === void 0 ? void 0 : _this$props$makeStyle.call(_this$props);
  }

  componentDidUpdate() {
    var _this$props$makeStyle2, _this$props2;

    (_this$props$makeStyle2 = (_this$props2 = this.props).makeStyles) === null || _this$props$makeStyle2 === void 0 ? void 0 : _this$props$makeStyle2.call(_this$props2);
  }

  render() {
    const props = (0, _omitProps.omitProps)(this.props, Item.allowedProps);
    const _this$props3 = this.props,
          as = _this$props3.as,
          children = _this$props3.children,
          withVisualDebug = _this$props3.withVisualDebug,
          textAlign = _this$props3.textAlign,
          size = _this$props3.size,
          direction = _this$props3.direction,
          margin = _this$props3.margin,
          padding = _this$props3.padding,
          overflowX = _this$props3.overflowX,
          overflowY = _this$props3.overflowY,
          styles = _this$props3.styles;
    const dirColumn = direction === 'column';
    const dirRow = direction === 'row';
    return (0, _emotion.jsx)(_View.View, Object.assign({}, props, {
      css: styles === null || styles === void 0 ? void 0 : styles.flexItem,
      elementRef: this.handleRef,
      as: as,
      minHeight: dirColumn ? size : void 0,
      minWidth: dirRow ? size : void 0,
      textAlign: textAlign,
      margin: margin,
      padding: padding,
      overflowX: overflowX,
      overflowY: overflowY || (dirColumn ? 'auto' : 'visible'),
      withVisualDebug: withVisualDebug
    }), children);
  }

}, _class2.displayName = "Item", _class2.componentId = 'Flex.Item', _class2.propTypes = _props.propTypes, _class2.allowedProps = _props.allowedProps, _class2.defaultProps = {
  as: 'span',
  shouldGrow: false,
  shouldShrink: false
}, _class2)) || _class);
exports.Item = Item;
var _default = Item;
exports.default = _default;