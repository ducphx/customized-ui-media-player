import { FocusRegionOptions } from './FocusRegionOptions';
declare class ScreenReaderFocusRegion {
    private _parents;
    private _nodes;
    private _liveRegion;
    private _contextElement;
    private _options;
    private _observer;
    private _attributes;
    constructor(element: Element | Node | null, options?: FocusRegionOptions);
    updateElement(element: Element | Node): void;
    muteNode(node: Element): void;
    hideNodes(nodes: Element[]): void;
    hideNode(node: Element): void;
    handleDOMMutation: (records: MutationRecord[]) => void;
    restoreNode(removedNode: Element): void;
    parseIframeBodies(node: Element): HTMLElement[];
    activate(): void;
    deactivate(): void;
}
export default ScreenReaderFocusRegion;
export { 
/**
 * ---
 * category: utilities/a11y
 * ---
 *
 * Utility that hides all DOM elements outside of a specified node. Used,
 * for example, in overlay components where we want to restrict the screen
 * readers to the overlay content.
 * @module ScreenReaderFocusRegion
 */
ScreenReaderFocusRegion };
//# sourceMappingURL=ScreenReaderFocusRegion.d.ts.map