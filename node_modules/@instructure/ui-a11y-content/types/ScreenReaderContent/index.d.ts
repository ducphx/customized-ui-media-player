/** @jsx jsx */
import { Component } from 'react';
import { jsx } from '@instructure/emotion';
import type { ScreenReaderContentProps } from './props';
/**
---
category: components/utilities
---
@module ScreenReaderContent
@tsProps
**/
declare class ScreenReaderContent extends Component<ScreenReaderContentProps> {
    static readonly componentId = "ScreenReaderContent";
    static propTypes: import("@instructure/shared-types/types/UtilityTypes").PropValidators<keyof {
        as?: import("@instructure/shared-types/types/CommonProps").AsElementType | undefined;
        children?: import("react").ReactNode;
        elementRef?: ((element: Element | null) => void) | undefined;
    }>;
    static allowedProps: readonly (keyof {
        as?: import("@instructure/shared-types/types/CommonProps").AsElementType | undefined;
        children?: import("react").ReactNode;
        elementRef?: ((element: Element | null) => void) | undefined;
    })[];
    static defaultProps: {
        readonly as: "span";
        readonly children: null;
    };
    ref: Element | null;
    handleRef: (el: Element | null) => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): jsx.JSX.Element;
}
export default ScreenReaderContent;
export { ScreenReaderContent };
//# sourceMappingURL=index.d.ts.map