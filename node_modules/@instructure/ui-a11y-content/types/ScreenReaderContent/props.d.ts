import { ReactNode } from 'react';
import type { AsElementType, OtherHTMLAttributes, PropValidators } from '@instructure/shared-types';
import type { WithStyleProps, ComponentStyle } from '@instructure/emotion';
declare type ScreenReaderContentOwnProps = {
    /**
     * the element type to render as
     */
    as?: AsElementType;
    /**
     * content meant for screen readers only
     */
    children?: ReactNode;
    /**
     * provides a reference to the underlying html root element
     */
    elementRef?: (element: Element | null) => void;
};
declare type PropKeys = keyof ScreenReaderContentOwnProps;
declare type AllowedPropKeys = Readonly<Array<PropKeys>>;
declare type ScreenReaderContentProps = ScreenReaderContentOwnProps & OtherHTMLAttributes<ScreenReaderContentOwnProps> & WithStyleProps<null, ScreenReaderContentStyle>;
declare type ScreenReaderContentStyle = ComponentStyle<'screenReaderContent'>;
declare const propTypes: PropValidators<PropKeys>;
declare const allowedProps: AllowedPropKeys;
export type { ScreenReaderContentProps, ScreenReaderContentStyle };
export { propTypes, allowedProps };
//# sourceMappingURL=props.d.ts.map